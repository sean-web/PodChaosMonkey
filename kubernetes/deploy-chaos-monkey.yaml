apiVersion: v1
kind: Namespace
metadata:
  name: workloads
  labels:
    name: pod-chaos-monkey

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: workloads
  name: chaos-monkey
  labels:
    name: pod-chaos-monkey
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "delete"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: chaos-monkey-workloads
  labels:
    name: pod-chaos-monkey
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: chaos-monkey
subjects:
- kind: ServiceAccount
  name: default
  namespace: workloads

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hello-world
  name: hello-world
  namespace: workloads
spec:
  replicas: 5
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - image: docker.io/library/hello-world
        imagePullPolicy: Always
        name: hello-world

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-chaos-monkey
  namespace: workloads
  labels:
    app: pod-chaos-monkey
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod-chaos-monkey
  template:
    metadata:
      labels:
        app: pod-chaos-monkey
    spec:
      containers:
      - name: pod-chaos-monkey-deployment
        image: docker.io/seananderson2032/chaosmonkey1
        resources:
          requests:
            cpu: "100m"
        imagePullPolicy: Always
        ports:
        - containerPort: 3000

